rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isTeamMember() {
      return isAuth() && exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid));
    }

    // --- Collection Rules ---

    // Artists can be read by anyone, but only written to by authenticated admins (via cloud function).
    match /artists/{artistId} {
      allow read: if true;
      allow write: if false; // All writes must go through a Cloud Function.
    }

    // Customers can only read/write their own data.
    match /customers/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if isAuth(); // Allow creation for new sign-ups.
    }

    // Bookings can be created by any authenticated user for themselves.
    // They can only be read by the customer, an involved artist, or a team member.
    match /bookings/{bookingId} {
      allow create: if isAuth() && isOwner(request.resource.data.customerId);
      allow read: if isAuth() && (isOwner(resource.data.customerId) || request.auth.uid in resource.data.artistIds || isTeamMember());
      allow update, delete: if false; // All updates must go through a Cloud Function.
    }

    // Pending artist applications can be created by anyone, but only read/deleted by admins.
    match /pendingArtists/{pendingId} {
      allow create: if true;
      allow read, delete: if isTeamMember();
      allow update: if false;
    }
    
    // Team member roles can only be written by Super Admins.
    // An authenticated user can read their own team member document to know their permissions.
    match /teamMembers/{userId} {
      allow get: if isOwner(userId);
      allow list: if isTeamMember(); // Allow other admins to see the list of team members
      allow write: if isAuth() && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // Notifications can be read only by the user they are intended for.
    match /notifications/{notificationId} {
       allow read: if isAuth() && resource.data.artistId == request.auth.uid;
       allow write: if false;
    }
    
    // All config documents are publicly readable, but not writable from the client.
     match /config/{docId} {
      allow read: if true;
      allow write: if false;
    }

  }
}
